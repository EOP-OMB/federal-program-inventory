version: '3.8'
services:
  api:
    build: ./api
    ports:
      - "8000:8000"
    depends_on:
      - elasticsearch
    environment:
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - ES_SCHEME=http
    networks:
      - internal
  website:
    build:
      context: ./website   # Adjust the build context to point to the /website folder
    ports:
      - "8080:8080"         # Expose port 8080 for the website
    depends_on:
      - elasticsearch       # Ensure Elasticsearch starts before the website

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - "9200:9200"         # Expose Elasticsearch on port 9200
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  indexer:
    image: python:3.9
    volumes:
      - ./website/data:/app/data
      - ./scripts:/app/scripts
    working_dir: /app/scripts
    depends_on:
      elasticsearch:
        condition: service_healthy
    command: ["python", "index_programs.py"]
    networks:
      - internal

volumes:
  esdata:
    driver: local

networks:
  internal:
    driver: bridge
